import { css } from "@styled-system/css";
import { flex, circle } from "@styled-system/patterns";
import { Link, Header, Section } from '~/components/parts';

export default function Index() {
  return (
    <main className={flex({ justify: 'center', w: '100%', p: '20px' })}>
      <div className={flex({ direction: 'column', w: '100%', maxW: '1080px', gap: '30px'})}>
        <Header />
        <Section heading="Job">
          <p>
            このページでは仕事について記載していきます。<br />
            基本的にWebシステムを主に開発、運用するプログラマで、15年程度の経験です。<br />
            新卒のときはSIer、次の会社は健保関連で健康診断結果の管理システム、現職は倉庫関連システムの開発をしています。<br />
            <br />
            基本的にはアプリケーションを書くプログラマとしての役割ですが、チームリーダ、SRE、組織課題のタスクフォースなどの経験もあります。<br />
            なにか技術に特化するというわけでもなく、プロダクト開発やマネジメントの高いスキルがあるわけでもないですが、
            特定の事業にのめり込んで考え、ユーザ、プロダクトの視点からシステムのあるべき姿を考えるということについては、強い関心を持って仕事をしてきました。<br />
            <br />
            以下ではスキルについて言及していきますが、技術、エンジニアリング、管理、プロダクトという切り口で分けて記載します。<br />
            また、Publicなページなので実績を絡めて説明はできないので、あいまいなところもあるかと想います。<br />
          </p>
        </Section>
        <Section heading="Programming">
          <dl className={css({ "& dd": { paddingLeft: '20px' } })}>
            <dt>プログラミング全般</dt>
            <dd>
              難解なアルゴリズムやミドルウェア、フレームワークなどのライブラリの経験はありませんが、なにかアプリケーションを作ることでプログラミングで困ることはない程度にはコードを書いてきました。<br />
            </dd>
            <dt>ソフトウェア設計</dt>
            <dd>
              要件定義は経験がないです。機能を定義するような基本設計は、足りない場合は都度補って提案してきましたが、仕事で役割を担ったことはありません。ただ、個人の開発プロジェクトではそのあたりもしています。<br />
              さらに詳細に入って、ソフトウェア設計については、モデリング、コーディングレベルのアーキテクチャ、テーブル設計など、一通りできます。ただ、特定のシステムでの最適解を素早く提案できるほど熟達できているわけではありません。<br />
              toBの開発ばかり経験しているので、業務プロセスを設計したり、業務プロセス上でのシステムの最適化は意識しています。
            </dd>
            <dt>フロントエンド</dt>
            <dd>
              Reactは好きで個人でも仕事でも使っていますが、UIデザインはできません。<br />
              最近のビルドツールを使って基本的なビルドプロセスを構築することはできますが、ビルドプロセスの内部をチューニング、カスタマイズするような経験はありません。<br />
            </dd>
            <dt>インフラ設計</dt>
            <dd>
              サーバを一からセットアップしてネットワークを設計するようなことは知見がありません。AWSやGoogle Cloudの各機能を数点組み合わせて、小さなインフラを設計する程度は個人のプロジェクトでしています。<br />
              AWSやGoogle Cloud上に構築されたインフラを理解し、保守運用、トラブルシューティングは多少の経験があります。
              IaCは追求して設計、開発した経験はありませんが、基本的に個人で作るインフラはTerraformで管理しています。<br />
            </dd>
            <dt>パフォーマンス、非機能要件</dt>
            <dd>
              新規開発時に、パフォーマンスをKPIとして設計した経験はありませんが、開発プロセス、運用の中でボトルネックを潰すことは習慣的に行っています。<br />
              toBシステムの開発ばかりなので、core web vitalなどの表示のための工夫はほとんど経験がなく、CDNを使ったとはありません。<br />
              反面、バッチを早く終わらせる、機能を分析して並列化する。ユースケースの分析から、機能を分割して、それぞれのパフォーマンスチューニングを行うという経験はあります。<br />
              また、業務プロセス上でのボトルネックを意識することが多いため、なにか機能を早くするというよりも、全体フローでのデータの流量を意識してボトルネックを潰すという思考になりやすいです。<br />
            </dd>
            <dt>JavaScript,TypeScript</dt>
            <dd>
              JavaScriptが最も好きな言語で、実用上はTypeScriptを利用すべきという考えのもと、個人のプロジェクトは基本的にTypeScriptで作ります。<br />
              ちょっとしたコードサンプルやスクリプトもTypeScriptで記載し、ソフトウェア設計の際にも、TypeScriptの言語機能をベースに考える傾向があります。<br />
              ただ、仕事ではReactプロジェクトを改修した程度で、一からプロダクトを書き起こし、ビルドプロセスを設計するというのは、実務上の経験はありません。<br />
            </dd>
            <dt>Java</dt>
            <dd>
              Javaは新卒の際、新人研修で教わり、実務でも2社で利用してきました。基本的なコーディングや言語仕様はしっかりと把握し、コードが書けます。<br />
              ただ、versionは8ぐらいまでしか経験がなく、最新の書き方がわからないのと、パッケージ管理についてもかなり古い知識しかありません。また、サーバソフトウェアはTomcatに触ったことがある程度です。<br />
            </dd>
            <dt>PHP</dt>
            <dd>
              PHPは現職で使っていますが、PHPの言語仕様には明るくなく、意識としてはLaravelのコードを書いているというマインドセットに近いです。<br />
              アプリケーションを書く上で、知るべき仕様は都度把握し、正しいコードを書いていますが、体系的にPHPをわかっているかというと怪しいです。<br />
            </dd>
            <dt>Relational Database</dt>
            <dd>
              データベースはKVSやDocument DBの経験はありません。<br />
              MySQL、PostgreSQLであれば、スキーマ設計、パフォーマンスチューニング、複雑なクエリの構築など、アプリケーション開発で必要なことは一通りしてきました。 ただ、スキーマ設計の最適解を素早く提案できるほど熟達しているわけではありません。<br />
              ミドルウェアとしてデータベースの管理は経験がなく、メモリやCPU配分、レプリケーション設計、バックアップ設計などは知識として知っている程度です。<br />
            </dd>
            <dt>Terraform</dt>
            <dd>
              個人のプロジェクトはTerraformでインフラを管理しているので利用に抵抗はありませんが、HCLの文法をすべて使いこなせるわけではありません。<br />
              また、環境ごとに設定を変えるような、IaCの設計や工夫までは経験がありません。<br />
            </dd>
            <dt>CI/CD</dt>
            <dd>
              個人のプロジェクトでは、Github Actionsを利用したCI/CDを構築し、手順や運用を一人で実現可能な状況を作っています。<br />
              仕事でも、CI/CDのプロセスを理解し、トラブルシューティングしたり、ちょっとした変更はしたことがありますが、一から設計した経験はありません。<br />
            </dd>
          </dl>
        </Section>
        <Section heading="Engineering">
          <p>ここでのエンジニアリングとは、より技術的なハードスキルよりも、チーム開発、プロダクト開発の視点での工夫や志向性などについてです。</p>
          <br />
          <dl className={css({ "& dd": { paddingLeft: '20px' } })}>
            <dt>開発プロセス</dt>
            <dd>
              特にスクラム、アジャイルという言葉を意識して作ってきたということはありませんが、知識としては理解しています。<br />
              チームリーダをしていたときは、機能定義、ソフトウェア設計、コーディング、テスト、レビューなどを見渡し、プログラマの観点から効率化できる部分を探して工夫するようにしてきました。<br />
            </dd>
            <dt>レビュー</dt>
            <dd>
              レビューはWorkflowの一プロセスですが、プログラマとしてはチームあるいは関係者の認識を揃えて、長期的な開発効率を高めるものとして意識しています。<br />
              レビュープロセスはレビュアの観点では、非常に負担になることも多いので、ペアプロ、Pull Requestの分割設計やその基準など、チームで適用すべきルールやプラクティスを導入して改善してきました。<br />
            </dd>
            <dt>DevOps</dt>
            <dd>
              開発チームでデータメンテ、アプリケーションの設定、トラブルシューティング、アラート対応などを行ってきた習慣があります。<br/ >
              機能開発のトリガーとして、Opsの改善、分析から費用対効果の大きなDevタスクを作って対応してきました。<br />
            </dd>
            <dt>Deploy</dt>
            <dd>
              サーバでサーバソフトウェアが動いているという環境で、コードを書き換えるデプロイは、業務で経験してきました。<br />
              現代的なコンテナ環境でのデプロイは経験がないのと、停止時間にシビアなシステムの経験もありません。<br />
            </dd>
            <dt>コード管理</dt>
            <dd>
              gitは一通り使え、GitFlowでの開発ができます。<br />
              version管理はしていますがversion管理の設計をしたことはありません。また、モノレポ構成の設計、運用経験もありません。<br />
            </dd>
            <dt>プロジェクト、タスク管理</dt>
            <dd>
              多人数で長期的に工数を検討、配分し、プロジェクト円滑に進めるために障害を取り除くことをプロジェクト管理とすると、かじったことがある程度です。<br />
              チケットベースでタスクを管理する経験が多く、チケットを切り、優先順位を検討し、更にタスクにかかる工数、作業ステップを検討して作業することが多いです。<br />
            </dd>
            <dt>監視、アラート対応</dt>
            <dd>
              監視の設計をしたことはありませんが、監視設定の調整や運用は行い、アラート対応もしています。<br />
              システムではなく、業務上でのChatOps的な設計開発は経験しています。<br />
            </dd>
          </dl>
        </Section>
        <Section heading="Management">
          <p>チームリーダレベルでのマネジメントです。</p>
          <br />
          <dl className={css({ "& dd": { paddingLeft: '20px' } })}>
            <dt>チームミッション</dt>
            <dd>
              チームミッションを決めるのは苦手で、上位の会社や組織のミッションがあいまいと不平を言ってしまいがちです。<br />
              結果、ボトムアップでの開発効率、運用効率、メンバー意見をベースに考えることが多いですが、<br />
              どうしてもプログラマコミュニティでよく言われるベストプラクティスを導入しましょう！という意見に落ち着きがちなのが悩ましく感じます。<br />
              よりプロダクト設計上の課題や、会社貢献が見える形での設定ができるようにしたいところです。<br />
            </dd>
            <dt>チームコミュニケーション</dt>
            <dd>
              会議体や、1on1でのコミュニケーション、エスカレーションのタイミングなど、基本的なものは設計、調整して運用した経験があります。<br />
              ボトムアップでの意見交換をベースとした意思決定を促したいのですが、どうしても自分の意見を強く意識して通しがちな傾向があります。<br />
              結果、チームメンバー同士のコミュニケーションや、意見交換を通しての成長を促す部分までは、ケアができていないことが多いです。<br />
            </dd>
            <dt>ファシリテーション</dt>
            <dd>
              ファシリテーションは苦手意識はあまりないですが、評価を受けたこともないので、あまりわからないです。<br />
              意見の相違に対して、ソリューションを出す、意見を引き出す、クロージングするなどは、意識しています。<br />
            </dd>
            <dt>タスク割り振り</dt>
            <dd>
              現状のタスクの重さ、重要度、費用対効果を評価したうえで、メンバーのスキルレベルを考えて割り振るということはしていました。<br />
              割り振ったうえで、サポートが必要であればサポート体制を検討し、タスクのボトルネックを消していけるように工夫はしていました。<br />
            </dd>
            <dt>評価</dt>
            <dd>
              自分のスキル以上の評価はできないですが、チームメンバーのスキル、傾向を把握し、どんな仕事が可能か、課題はなにかは意識しています。<br />
              実績上、貢献度だけではなく、当人にとっての成長などを含めて評価はしたいと思っています。<br />
              評価はエスカレーションしているので、給与を決めるようなプロセスの最終決定に関わったことはありません。<br />
            </dd>
            <dt>面接</dt>
            <dd>
              現職で面接は月に最大10本程度までする時期を経験しています。<br />
              採用したい像を意識し、評価したいスキルをあぶり出すための質問をどうすればよいか考えて質問しています。<br />
              ただ、一辺倒な評価基準ではなく、対象者の良さを引き出して、社内での活躍のイメージを検討できるように様々な面から質問するようにしています。<br />
            </dd>
          </dl>
        </Section>
        <Section heading="Product">
          <p>
            プロダクトがどうあるべきかという点は意識し、機能設計は行ってきましたが、プロダクトマネジメントという役割は経験がありません。<br />
            ドックフーディングできる個人開発では、自分が求めているものの最低限の機能から、プロダクトをデザインして作っています。<br />
            仕事では、利用者の人物像、考え方、手癖や傾向などのイメージを掴み、機能はどうあれば使いやすいのかという点を意識していますが、直接的なユーザアンケートや会話をする機会は少なかったです。<br />
          </p>
        </Section>
        <Section heading="Others">
          <p>
            ライブラリを作ったことはないが、ライブラリコードを読むのは好きです。<br />
            プロジェクトゴールを決めるのは苦手だが、ゴールまでのプロセスを描くのは好きです。得意とは言い切れないです。<br />
            人とのコミュニケーションで合意するのは職務上大事で、実務上も経験、試行錯誤していますが、苦手意識はあります。合意できなければ、ドキュメントの見直し、合意の方法、合意プロセスの検討など、工夫はしています。<br />
            仕事やプログラミングは好きで、比較的自分にあっている仕事だなと思います。 <br />
          </p>
        </Section>
        <div>
          <Link href='/' text='To Top' />
        </div>
      </div>
    </main>
  );
};
